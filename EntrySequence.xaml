<Activity mc:Ignorable="sap sap2010" x:Class="EntrySequence" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="552,816.8" sap2010:WorkflowViewState.IdRef="EntrySequence_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="EntrySequence" sap:VirtualizedContainerService.HintSize="916,1881.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Name="Num_of_Attempts" />
      <Variable x:TypeArguments="x:String" Name="Warning_Message" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ReadSettings workflow" sap:VirtualizedContainerService.HintSize="874.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\ReadSettings.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">
          <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ResetNumberofAttempts workflow" sap:VirtualizedContainerService.HintSize="874.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Guys_n_Gurls\ResetNumberofAttempts.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:Int32" x:Key="out_Num_of_Attempts">
          <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="Num_of_Attempts" />
        </OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Warning_Message">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Warning_Message" />
        </OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InterruptibleWhile DisplayName="Check Max Number Of Attempts has not been exceeded" sap:VirtualizedContainerService.HintSize="874.4,1148.8" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
      <ui:InterruptibleWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="839.2,981.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="Raw_Input_Gender" />
            <Variable x:TypeArguments="x:String" Name="Success_Message" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Request Input From User workflow" sap:VirtualizedContainerService.HintSize="797.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Guys_n_Gurls\Request Input From User.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="x:String" x:Key="out_Raw_Input_Gender">
                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Raw_Input_Gender" />
              </OutArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Warning_Message">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Warning_Message" />
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ValidateInput workflow" sap:VirtualizedContainerService.HintSize="797.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Guys_n_Gurls\ValidateInput.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_Raw_Input_Gender">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Raw_Input_Gender" />
              </InArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="out_Success_Message">
                <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Success_Message" />
              </OutArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <If Condition="[Success_Message IsNot Nothing]" sap:VirtualizedContainerService.HintSize="797.6,581.6" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="420,422.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ResetNumberofAttempts workflow" sap:VirtualizedContainerService.HintSize="378.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Guys_n_Gurls\ResetNumberofAttempts.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <OutArgument x:TypeArguments="x:Int32" x:Key="out_Num_of_Attempts">
                      <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="Num_of_Attempts" />
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_Warning_Message">
                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Warning_Message" />
                    </OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SuccessMessage workflow" sap:VirtualizedContainerService.HintSize="378.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Guys_n_Gurls\SuccessComponents\SuccessMessage.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Success_Message">
                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Success_Message" />
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:Break sap:VirtualizedContainerService.HintSize="378.4,22.4" sap2010:WorkflowViewState.IdRef="Break_1" />
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke HandleBadInput workflow" sap:VirtualizedContainerService.HintSize="333.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Guys_n_Gurls\HandleBadInput.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <OutArgument x:TypeArguments="x:Int32" x:Key="out_Num_of_Attempts">
                    <mva:VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="Num_of_Attempts" />
                  </OutArgument>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_Num_of_Attempts">
                    <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="Num_of_Attempts" />
                  </InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_Warning_Message">
                    <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Warning_Message" />
                  </OutArgument>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </If.Else>
          </If>
        </Sequence>
      </ui:InterruptibleWhile.Body>
      <ui:InterruptibleWhile.Condition>
        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="Num_of_Attempts &lt;= Convert.ToInt32(Config(&quot;MAX_NUMBER_OF_ATTEMPTS&quot;))" />
      </ui:InterruptibleWhile.Condition>
    </ui:InterruptibleWhile>
    <If Condition="[Num_of_Attempts &gt; Convert.ToInt32(Config(&quot;MAX_NUMBER_OF_ATTEMPTS&quot;))]" DisplayName=" Check IF Max Attempts Reached" sap:VirtualizedContainerService.HintSize="874.4,292.8" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AttemptsReachedMessage workflow" sap:VirtualizedContainerService.HintSize="378.4,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Guys_n_Gurls\ErrorComponents\AttemptsReachedMessage.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <scg:Dictionary x:TypeArguments="x:String, Argument" />
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
  </Sequence>
</Activity>